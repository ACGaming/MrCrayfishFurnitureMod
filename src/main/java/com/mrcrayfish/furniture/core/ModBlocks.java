package com.mrcrayfish.furniture.core;

import com.mrcrayfish.furniture.FurnitureMod;
import com.mrcrayfish.furniture.Reference;
import com.mrcrayfish.furniture.block.*;
import com.mrcrayfish.furniture.item.DoorMatItem;
import com.mrcrayfish.furniture.util.BlockNames;
import net.minecraft.block.Block;
import net.minecraft.block.Blocks;
import net.minecraft.block.SoundType;
import net.minecraft.block.material.Material;
import net.minecraft.block.material.MaterialColor;
import net.minecraft.block.material.PushReaction;
import net.minecraft.item.BlockItem;
import net.minecraft.item.Item;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;

import java.util.ArrayList;
import java.util.List;
import java.util.function.Function;

/**
 * Author: MrCrayfish
 */
@Mod.EventBusSubscriber(modid = Reference.MOD_ID, bus = Mod.EventBusSubscriber.Bus.MOD)
public class ModBlocks
{
    public static final Material WOOD = new Material(MaterialColor.WOOD, false, false, false, false, true, true, false, PushReaction.NORMAL);
    public static final Material STONE = new Material(MaterialColor.STONE, false, false, false, false, false, true, false, PushReaction.NORMAL);
    public static final Material WOOL = new Material(MaterialColor.WOOL, false, false, false, false, false, true, false, PushReaction.NORMAL);

    private static final List<Block> BLOCKS = new ArrayList<>();
    private static final List<Item> ITEMS = new ArrayList<>();

    public static final Block TABLE_OAK = register(BlockNames.TABLE_OAK, new TableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block TABLE_SPRUCE = register(BlockNames.TABLE_SPRUCE, new TableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block TABLE_BIRCH = register(BlockNames.TABLE_BIRCH, new TableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block TABLE_JUNGLE = register(BlockNames.TABLE_JUNGLE, new TableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block TABLE_ACACIA = register(BlockNames.TABLE_ACACIA, new TableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block TABLE_DARK_OAK = register(BlockNames.TABLE_DARK_OAK, new TableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block TABLE_STONE = register(BlockNames.TABLE_STONE, new TableBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE)));
    public static final Block TABLE_GRANITE = register(BlockNames.TABLE_GRANITE, new TableBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE)));
    public static final Block TABLE_DIORITE = register(BlockNames.TABLE_DIORITE, new TableBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE)));
    public static final Block TABLE_ANDESITE = register(BlockNames.TABLE_ANDESITE, new TableBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE)));
    public static final Block TABLE_STRIPPED_OAK = register(BlockNames.TABLE_STRIPPED_OAK, new TableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block TABLE_STRIPPED_SPRUCE = register(BlockNames.TABLE_STRIPPED_SPRUCE, new TableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block TABLE_STRIPPED_BIRCH = register(BlockNames.TABLE_STRIPPED_BIRCH, new TableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block TABLE_STRIPPED_JUNGLE = register(BlockNames.TABLE_STRIPPED_JUNGLE, new TableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block TABLE_STRIPPED_ACACIA = register(BlockNames.TABLE_STRIPPED_ACACIA, new TableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block TABLE_STRIPPED_DARK_OAK = register(BlockNames.TABLE_STRIPPED_DARK_OAK, new TableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block CHAIR_OAK = register(BlockNames.CHAIR_OAK, new ChairBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block CHAIR_SPRUCE = register(BlockNames.CHAIR_SPRUCE, new ChairBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block CHAIR_BIRCH = register(BlockNames.CHAIR_BIRCH, new ChairBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block CHAIR_JUNGLE = register(BlockNames.CHAIR_JUNGLE, new ChairBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block CHAIR_ACACIA = register(BlockNames.CHAIR_ACACIA, new ChairBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block CHAIR_DARK_OAK = register(BlockNames.CHAIR_DARK_OAK, new ChairBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block CHAIR_STONE = register(BlockNames.CHAIR_STONE, new ChairBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE)));
    public static final Block CHAIR_GRANITE = register(BlockNames.CHAIR_GRANITE, new ChairBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE)));
    public static final Block CHAIR_DIORITE = register(BlockNames.CHAIR_DIORITE, new ChairBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE)));
    public static final Block CHAIR_ANDESITE = register(BlockNames.CHAIR_ANDESITE, new ChairBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE)));
    public static final Block CHAIR_STRIPPED_OAK = register(BlockNames.CHAIR_STRIPPED_OAK, new ChairBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block CHAIR_STRIPPED_SPRUCE = register(BlockNames.CHAIR_STRIPPED_SPRUCE, new ChairBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block CHAIR_STRIPPED_BIRCH = register(BlockNames.CHAIR_STRIPPED_BIRCH, new ChairBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block CHAIR_STRIPPED_JUNGLE = register(BlockNames.CHAIR_STRIPPED_JUNGLE, new ChairBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block CHAIR_STRIPPED_ACACIA = register(BlockNames.CHAIR_STRIPPED_ACACIA, new ChairBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block CHAIR_STRIPPED_DARK_OAK = register(BlockNames.CHAIR_STRIPPED_DARK_OAK, new ChairBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block COFFEE_TABLE_OAK = register(BlockNames.COFFEE_TABLE_OAK, new CoffeeTableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block COFFEE_TABLE_SPRUCE = register(BlockNames.COFFEE_TABLE_SPRUCE, new CoffeeTableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block COFFEE_TABLE_BIRCH = register(BlockNames.COFFEE_TABLE_BIRCH, new CoffeeTableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block COFFEE_TABLE_JUNGLE = register(BlockNames.COFFEE_TABLE_JUNGLE, new CoffeeTableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block COFFEE_TABLE_ACACIA = register(BlockNames.COFFEE_TABLE_ACACIA, new CoffeeTableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block COFFEE_TABLE_DARK_OAK = register(BlockNames.COFFEE_TABLE_DARK_OAK, new CoffeeTableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block COFFEE_TABLE_STONE = register(BlockNames.COFFEE_TABLE_STONE, new CoffeeTableBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE)));
    public static final Block COFFEE_TABLE_GRANITE = register(BlockNames.COFFEE_TABLE_GRANITE, new CoffeeTableBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE)));
    public static final Block COFFEE_TABLE_DIORITE = register(BlockNames.COFFEE_TABLE_DIORITE, new CoffeeTableBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE)));
    public static final Block COFFEE_TABLE_ANDESITE = register(BlockNames.COFFEE_TABLE_ANDESITE, new CoffeeTableBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE)));
    public static final Block COFFEE_TABLE_STRIPPED_OAK = register(BlockNames.COFFEE_TABLE_STRIPPED_OAK, new CoffeeTableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block COFFEE_TABLE_STRIPPED_SPRUCE = register(BlockNames.COFFEE_TABLE_STRIPPED_SPRUCE, new CoffeeTableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block COFFEE_TABLE_STRIPPED_BIRCH = register(BlockNames.COFFEE_TABLE_STRIPPED_BIRCH, new CoffeeTableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block COFFEE_TABLE_STRIPPED_JUNGLE = register(BlockNames.COFFEE_TABLE_STRIPPED_JUNGLE, new CoffeeTableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block COFFEE_TABLE_STRIPPED_ACACIA = register(BlockNames.COFFEE_TABLE_STRIPPED_ACACIA, new CoffeeTableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block COFFEE_TABLE_STRIPPED_DARK_OAK = register(BlockNames.COFFEE_TABLE_STRIPPED_DARK_OAK, new CoffeeTableBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block CABINET_OAK = register(BlockNames.CABINET_OAK, new CabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block CABINET_SPRUCE = register(BlockNames.CABINET_SPRUCE, new CabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block CABINET_BIRCH = register(BlockNames.CABINET_BIRCH, new CabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block CABINET_JUNGLE = register(BlockNames.CABINET_JUNGLE, new CabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block CABINET_ACACIA = register(BlockNames.CABINET_ACACIA, new CabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block CABINET_DARK_OAK = register(BlockNames.CABINET_DARK_OAK, new CabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block CABINET_STONE = register(BlockNames.CABINET_STONE, new CabinetBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE)));
    public static final Block CABINET_GRANITE = register(BlockNames.CABINET_GRANITE, new CabinetBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE)));
    public static final Block CABINET_DIORITE = register(BlockNames.CABINET_DIORITE, new CabinetBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE)));
    public static final Block CABINET_ANDESITE = register(BlockNames.CABINET_ANDESITE, new CabinetBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE)));
    public static final Block CABINET_STRIPPED_OAK = register(BlockNames.CABINET_STRIPPED_OAK, new CabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block CABINET_STRIPPED_SPRUCE = register(BlockNames.CABINET_STRIPPED_SPRUCE, new CabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block CABINET_STRIPPED_BIRCH = register(BlockNames.CABINET_STRIPPED_BIRCH, new CabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block CABINET_STRIPPED_JUNGLE = register(BlockNames.CABINET_STRIPPED_JUNGLE, new CabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block CABINET_STRIPPED_ACACIA = register(BlockNames.CABINET_STRIPPED_ACACIA, new CabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block CABINET_STRIPPED_DARK_OAK = register(BlockNames.CABINET_STRIPPED_DARK_OAK, new CabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block BEDSIDE_CABINET_OAK = register(BlockNames.BEDSIDE_CABINET_OAK, new BedsideCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block BEDSIDE_CABINET_SPRUCE = register(BlockNames.BEDSIDE_CABINET_SPRUCE, new BedsideCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block BEDSIDE_CABINET_BIRCH = register(BlockNames.BEDSIDE_CABINET_BIRCH, new BedsideCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block BEDSIDE_CABINET_JUNGLE = register(BlockNames.BEDSIDE_CABINET_JUNGLE, new BedsideCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block BEDSIDE_CABINET_ACACIA = register(BlockNames.BEDSIDE_CABINET_ACACIA, new BedsideCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block BEDSIDE_CABINET_DARK_OAK = register(BlockNames.BEDSIDE_CABINET_DARK_OAK, new BedsideCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block BEDSIDE_CABINET_STONE = register(BlockNames.BEDSIDE_CABINET_STONE, new BedsideCabinetBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE)));
    public static final Block BEDSIDE_CABINET_GRANITE = register(BlockNames.BEDSIDE_CABINET_GRANITE, new BedsideCabinetBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE)));
    public static final Block BEDSIDE_CABINET_DIORITE = register(BlockNames.BEDSIDE_CABINET_DIORITE, new BedsideCabinetBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE)));
    public static final Block BEDSIDE_CABINET_ANDESITE = register(BlockNames.BEDSIDE_CABINET_ANDESITE, new BedsideCabinetBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE)));
    public static final Block BEDSIDE_CABINET_STRIPPED_OAK = register(BlockNames.BEDSIDE_CABINET_STRIPPED_OAK, new BedsideCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block BEDSIDE_CABINET_STRIPPED_SPRUCE = register(BlockNames.BEDSIDE_CABINET_STRIPPED_SPRUCE, new BedsideCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block BEDSIDE_CABINET_STRIPPED_BIRCH = register(BlockNames.BEDSIDE_CABINET_STRIPPED_BIRCH, new BedsideCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block BEDSIDE_CABINET_STRIPPED_JUNGLE = register(BlockNames.BEDSIDE_CABINET_STRIPPED_JUNGLE, new BedsideCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block BEDSIDE_CABINET_STRIPPED_ACACIA = register(BlockNames.BEDSIDE_CABINET_STRIPPED_ACACIA, new BedsideCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block BEDSIDE_CABINET_STRIPPED_DARK_OAK = register(BlockNames.BEDSIDE_CABINET_STRIPPED_DARK_OAK, new BedsideCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD)));
    public static final Block DESK_OAK = register(BlockNames.DESK_OAK, new DeskBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.OAK));
    public static final Block DESK_SPRUCE = register(BlockNames.DESK_SPRUCE, new DeskBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.BIRCH));
    public static final Block DESK_BIRCH = register(BlockNames.DESK_BIRCH, new DeskBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.SPRUCE));
    public static final Block DESK_JUNGLE = register(BlockNames.DESK_JUNGLE, new DeskBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.JUNGLE));
    public static final Block DESK_ACACIA = register(BlockNames.DESK_ACACIA, new DeskBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.ACACIA));
    public static final Block DESK_DARK_OAK = register(BlockNames.DESK_DARK_OAK, new DeskBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.DARK_OAK));
    public static final Block DESK_STONE = register(BlockNames.DESK_STONE, new DeskBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE), DeskBlock.MaterialType.STONE));
    public static final Block DESK_GRANITE = register(BlockNames.DESK_GRANITE, new DeskBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE), DeskBlock.MaterialType.GRANITE));
    public static final Block DESK_DIORITE = register(BlockNames.DESK_DIORITE, new DeskBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE), DeskBlock.MaterialType.DIORITE));
    public static final Block DESK_ANDESITE = register(BlockNames.DESK_ANDESITE, new DeskBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE), DeskBlock.MaterialType.ANDESITE));
    public static final Block DESK_STRIPPED_OAK = register(BlockNames.DESK_STRIPPED_OAK, new DeskBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.STRIPPED_OAK));
    public static final Block DESK_STRIPPED_SPRUCE = register(BlockNames.DESK_STRIPPED_SPRUCE, new DeskBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.STRIPPED_BIRCH));
    public static final Block DESK_STRIPPED_BIRCH = register(BlockNames.DESK_STRIPPED_BIRCH, new DeskBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.STRIPPED_SPRUCE));
    public static final Block DESK_STRIPPED_JUNGLE = register(BlockNames.DESK_STRIPPED_JUNGLE, new DeskBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.STRIPPED_JUNGLE));
    public static final Block DESK_STRIPPED_ACACIA = register(BlockNames.DESK_STRIPPED_ACACIA, new DeskBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.STRIPPED_ACACIA));
    public static final Block DESK_STRIPPED_DARK_OAK = register(BlockNames.DESK_STRIPPED_DARK_OAK, new DeskBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.STRIPPED_DARK_OAK));
    public static final Block DESK_CABINET_OAK = register(BlockNames.DESK_CABINET_OAK, new DeskCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.OAK));
    public static final Block DESK_CABINET_SPRUCE = register(BlockNames.DESK_CABINET_SPRUCE, new DeskCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.BIRCH));
    public static final Block DESK_CABINET_BIRCH = register(BlockNames.DESK_CABINET_BIRCH, new DeskCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.SPRUCE));
    public static final Block DESK_CABINET_JUNGLE = register(BlockNames.DESK_CABINET_JUNGLE, new DeskCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.JUNGLE));
    public static final Block DESK_CABINET_ACACIA = register(BlockNames.DESK_CABINET_ACACIA, new DeskCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.ACACIA));
    public static final Block DESK_CABINET_DARK_OAK = register(BlockNames.DESK_CABINET_DARK_OAK, new DeskCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.DARK_OAK));
    public static final Block DESK_CABINET_STONE = register(BlockNames.DESK_CABINET_STONE, new DeskCabinetBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE), DeskBlock.MaterialType.STONE));
    public static final Block DESK_CABINET_GRANITE = register(BlockNames.DESK_CABINET_GRANITE, new DeskCabinetBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE), DeskBlock.MaterialType.GRANITE));
    public static final Block DESK_CABINET_DIORITE = register(BlockNames.DESK_CABINET_DIORITE, new DeskCabinetBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE), DeskBlock.MaterialType.DIORITE));
    public static final Block DESK_CABINET_ANDESITE = register(BlockNames.DESK_CABINET_ANDESITE, new DeskCabinetBlock(Block.Properties.create(STONE).hardnessAndResistance(1.0F).sound(SoundType.STONE), DeskBlock.MaterialType.ANDESITE));
    public static final Block DESK_CABINET_STRIPPED_OAK = register(BlockNames.DESK_CABINET_STRIPPED_OAK, new DeskCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.STRIPPED_OAK));
    public static final Block DESK_CABINET_STRIPPED_SPRUCE = register(BlockNames.DESK_CABINET_STRIPPED_SPRUCE, new DeskCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.STRIPPED_BIRCH));
    public static final Block DESK_CABINET_STRIPPED_BIRCH = register(BlockNames.DESK_CABINET_STRIPPED_BIRCH, new DeskCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.STRIPPED_SPRUCE));
    public static final Block DESK_CABINET_STRIPPED_JUNGLE = register(BlockNames.DESK_CABINET_STRIPPED_JUNGLE, new DeskCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.STRIPPED_JUNGLE));
    public static final Block DESK_CABINET_STRIPPED_ACACIA = register(BlockNames.DESK_CABINET_STRIPPED_ACACIA, new DeskCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.STRIPPED_ACACIA));
    public static final Block DESK_CABINET_STRIPPED_DARK_OAK = register(BlockNames.DESK_CABINET_STRIPPED_DARK_OAK, new DeskCabinetBlock(Block.Properties.create(WOOD).hardnessAndResistance(1.0F).sound(SoundType.WOOD), DeskBlock.MaterialType.STRIPPED_DARK_OAK));
    public static final Block SOFA_WHITE = register(BlockNames.SOFA_WHITE, new SofaBlock(Block.Properties.create(WOOL, MaterialColor.SNOW).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block SOFA_ORANGE = register(BlockNames.SOFA_ORANGE, new SofaBlock(Block.Properties.create(WOOL, MaterialColor.ADOBE).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block SOFA_MAGENTA = register(BlockNames.SOFA_MAGENTA, new SofaBlock(Block.Properties.create(WOOL, MaterialColor.MAGENTA).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block SOFA_LIGHT_BLUE = register(BlockNames.SOFA_LIGHT_BLUE, new SofaBlock(Block.Properties.create(WOOL, MaterialColor.LIGHT_BLUE).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block SOFA_YELLOW = register(BlockNames.SOFA_YELLOW, new SofaBlock(Block.Properties.create(WOOL, MaterialColor.YELLOW).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block SOFA_LIME = register(BlockNames.SOFA_LIME, new SofaBlock(Block.Properties.create(WOOL, MaterialColor.LIME).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block SOFA_PINK = register(BlockNames.SOFA_PINK, new SofaBlock(Block.Properties.create(WOOL, MaterialColor.PINK).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block SOFA_GRAY = register(BlockNames.SOFA_GRAY, new SofaBlock(Block.Properties.create(WOOL, MaterialColor.GRAY).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block SOFA_LIGHT_GRAY = register(BlockNames.SOFA_LIGHT_GRAY, new SofaBlock(Block.Properties.create(WOOL, MaterialColor.LIGHT_GRAY).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block SOFA_CYAN = register(BlockNames.SOFA_CYAN, new SofaBlock(Block.Properties.create(WOOL, MaterialColor.CYAN).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block SOFA_PURPLE = register(BlockNames.SOFA_PURPLE, new SofaBlock(Block.Properties.create(WOOL, MaterialColor.PURPLE).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block SOFA_BLUE = register(BlockNames.SOFA_BLUE, new SofaBlock(Block.Properties.create(WOOL, MaterialColor.BLUE).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block SOFA_BROWN = register(BlockNames.SOFA_BROWN, new SofaBlock(Block.Properties.create(WOOL, MaterialColor.BROWN).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block SOFA_GREEN = register(BlockNames.SOFA_GREEN, new SofaBlock(Block.Properties.create(WOOL, MaterialColor.GREEN).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block SOFA_RED = register(BlockNames.SOFA_RED, new SofaBlock(Block.Properties.create(WOOL, MaterialColor.RED).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block SOFA_BLACK = register(BlockNames.SOFA_BLACK, new SofaBlock(Block.Properties.create(WOOL, MaterialColor.BLACK).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block SOFA_RAINBOW = register(BlockNames.SOFA_RAINBOW, new SofaBlock(Block.Properties.create(WOOL, MaterialColor.SNOW).hardnessAndResistance(0.5F).sound(SoundType.WOOD)), new Item.Properties());
    public static final Block BLINDS_OAK = register(BlockNames.BLINDS_OAK, new BlindsBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block BLINDS_SPRUCE = register(BlockNames.BLINDS_SPRUCE, new BlindsBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block BLINDS_BIRCH = register(BlockNames.BLINDS_BIRCH, new BlindsBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block BLINDS_JUNGLE = register(BlockNames.BLINDS_JUNGLE, new BlindsBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block BLINDS_ACACIA = register(BlockNames.BLINDS_ACACIA, new BlindsBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block BLINDS_DARK_OAK = register(BlockNames.BLINDS_DARK_OAK, new BlindsBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block BLINDS_STRIPPED_OAK = register(BlockNames.BLINDS_STRIPPED_OAK, new BlindsBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block BLINDS_STRIPPED_SPRUCE = register(BlockNames.BLINDS_STRIPPED_SPRUCE, new BlindsBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block BLINDS_STRIPPED_BIRCH = register(BlockNames.BLINDS_STRIPPED_BIRCH, new BlindsBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block BLINDS_STRIPPED_JUNGLE = register(BlockNames.BLINDS_STRIPPED_JUNGLE, new BlindsBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block BLINDS_STRIPPED_ACACIA = register(BlockNames.BLINDS_STRIPPED_ACACIA, new BlindsBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block BLINDS_STRIPPED_DARK_OAK = register(BlockNames.BLINDS_STRIPPED_DARK_OAK, new BlindsBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_FENCE_OAK = register(BlockNames.UPGRADED_FENCE_OAK, new UpgradedFenceBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_FENCE_SPRUCE = register(BlockNames.UPGRADED_FENCE_SPRUCE, new UpgradedFenceBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_FENCE_BIRCH = register(BlockNames.UPGRADED_FENCE_BIRCH, new UpgradedFenceBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_FENCE_JUNGLE = register(BlockNames.UPGRADED_FENCE_JUNGLE, new UpgradedFenceBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_FENCE_ACACIA = register(BlockNames.UPGRADED_FENCE_ACACIA, new UpgradedFenceBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_FENCE_DARK_OAK = register(BlockNames.UPGRADED_FENCE_DARK_OAK, new UpgradedFenceBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_FENCE_STRIPPED_OAK = register(BlockNames.UPGRADED_FENCE_STRIPPED_OAK, new UpgradedFenceBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_FENCE_STRIPPED_SPRUCE = register(BlockNames.UPGRADED_FENCE_STRIPPED_SPRUCE, new UpgradedFenceBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_FENCE_STRIPPED_BIRCH = register(BlockNames.UPGRADED_FENCE_STRIPPED_BIRCH, new UpgradedFenceBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_FENCE_STRIPPED_JUNGLE = register(BlockNames.UPGRADED_FENCE_STRIPPED_JUNGLE, new UpgradedFenceBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_FENCE_STRIPPED_ACACIA = register(BlockNames.UPGRADED_FENCE_STRIPPED_ACACIA, new UpgradedFenceBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_FENCE_STRIPPED_DARK_OAK = register(BlockNames.UPGRADED_FENCE_STRIPPED_DARK_OAK, new UpgradedFenceBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_GATE_OAK = register(BlockNames.UPGRADED_GATE_OAK, new UpgradedGateBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_GATE_SPRUCE = register(BlockNames.UPGRADED_GATE_SPRUCE, new UpgradedGateBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_GATE_BIRCH = register(BlockNames.UPGRADED_GATE_BIRCH, new UpgradedGateBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_GATE_JUNGLE = register(BlockNames.UPGRADED_GATE_JUNGLE, new UpgradedGateBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_GATE_ACACIA = register(BlockNames.UPGRADED_GATE_ACACIA, new UpgradedGateBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_GATE_DARK_OAK = register(BlockNames.UPGRADED_GATE_DARK_OAK, new UpgradedGateBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_GATE_STRIPPED_OAK = register(BlockNames.UPGRADED_GATE_STRIPPED_OAK, new UpgradedGateBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_GATE_STRIPPED_SPRUCE = register(BlockNames.UPGRADED_GATE_STRIPPED_SPRUCE, new UpgradedGateBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_GATE_STRIPPED_BIRCH = register(BlockNames.UPGRADED_GATE_STRIPPED_BIRCH, new UpgradedGateBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_GATE_STRIPPED_JUNGLE = register(BlockNames.UPGRADED_GATE_STRIPPED_JUNGLE, new UpgradedGateBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_GATE_STRIPPED_ACACIA = register(BlockNames.UPGRADED_GATE_STRIPPED_ACACIA, new UpgradedGateBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block UPGRADED_GATE_STRIPPED_DARK_OAK = register(BlockNames.UPGRADED_GATE_STRIPPED_DARK_OAK, new UpgradedGateBlock(Block.Properties.create(WOOD).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_FENCE_WHITE = register(BlockNames.PICKET_FENCE_WHITE, new UpgradedFenceBlock(Block.Properties.create(WOOD, MaterialColor.SNOW).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_FENCE_ORANGE = register(BlockNames.PICKET_FENCE_ORANGE, new UpgradedFenceBlock(Block.Properties.create(WOOD, MaterialColor.ADOBE).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_FENCE_MAGENTA = register(BlockNames.PICKET_FENCE_MAGENTA, new UpgradedFenceBlock(Block.Properties.create(WOOD, MaterialColor.MAGENTA).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_FENCE_LIGHT_BLUE = register(BlockNames.PICKET_FENCE_LIGHT_BLUE, new UpgradedFenceBlock(Block.Properties.create(WOOD, MaterialColor.LIGHT_BLUE).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_FENCE_YELLOW = register(BlockNames.PICKET_FENCE_YELLOW, new UpgradedFenceBlock(Block.Properties.create(WOOD, MaterialColor.YELLOW).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_FENCE_LIME = register(BlockNames.PICKET_FENCE_LIME, new UpgradedFenceBlock(Block.Properties.create(WOOD, MaterialColor.LIME).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_FENCE_PINK = register(BlockNames.PICKET_FENCE_PINK, new UpgradedFenceBlock(Block.Properties.create(WOOD, MaterialColor.PINK).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_FENCE_GRAY = register(BlockNames.PICKET_FENCE_GRAY, new UpgradedFenceBlock(Block.Properties.create(WOOD, MaterialColor.GRAY).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_FENCE_LIGHT_GRAY = register(BlockNames.PICKET_FENCE_LIGHT_GRAY, new UpgradedFenceBlock(Block.Properties.create(WOOD, MaterialColor.LIGHT_GRAY).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_FENCE_CYAN = register(BlockNames.PICKET_FENCE_CYAN, new UpgradedFenceBlock(Block.Properties.create(WOOD, MaterialColor.CYAN).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_FENCE_PURPLE = register(BlockNames.PICKET_FENCE_PURPLE, new UpgradedFenceBlock(Block.Properties.create(WOOD, MaterialColor.PURPLE).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_FENCE_BLUE = register(BlockNames.PICKET_FENCE_BLUE, new UpgradedFenceBlock(Block.Properties.create(WOOD, MaterialColor.BLUE).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_FENCE_BROWN = register(BlockNames.PICKET_FENCE_BROWN, new UpgradedFenceBlock(Block.Properties.create(WOOD, MaterialColor.BROWN).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_FENCE_GREEN = register(BlockNames.PICKET_FENCE_GREEN, new UpgradedFenceBlock(Block.Properties.create(WOOD, MaterialColor.GREEN).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_FENCE_RED = register(BlockNames.PICKET_FENCE_RED, new UpgradedFenceBlock(Block.Properties.create(WOOD, MaterialColor.RED).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_FENCE_BLACK = register(BlockNames.PICKET_FENCE_BLACK, new UpgradedFenceBlock(Block.Properties.create(WOOD, MaterialColor.BLACK).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_GATE_WHITE = register(BlockNames.PICKET_GATE_WHITE, new UpgradedGateBlock(Block.Properties.create(WOOD, MaterialColor.SNOW).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_GATE_ORANGE = register(BlockNames.PICKET_GATE_ORANGE, new UpgradedGateBlock(Block.Properties.create(WOOD, MaterialColor.ADOBE).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_GATE_MAGENTA = register(BlockNames.PICKET_GATE_MAGENTA, new UpgradedGateBlock(Block.Properties.create(WOOD, MaterialColor.MAGENTA).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_GATE_LIGHT_BLUE = register(BlockNames.PICKET_GATE_LIGHT_BLUE, new UpgradedGateBlock(Block.Properties.create(WOOD, MaterialColor.LIGHT_BLUE).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_GATE_YELLOW = register(BlockNames.PICKET_GATE_YELLOW, new UpgradedGateBlock(Block.Properties.create(WOOD, MaterialColor.YELLOW).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_GATE_LIME = register(BlockNames.PICKET_GATE_LIME, new UpgradedGateBlock(Block.Properties.create(WOOD, MaterialColor.LIME).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_GATE_PINK = register(BlockNames.PICKET_GATE_PINK, new UpgradedGateBlock(Block.Properties.create(WOOD, MaterialColor.PINK).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_GATE_GRAY = register(BlockNames.PICKET_GATE_GRAY, new UpgradedGateBlock(Block.Properties.create(WOOD, MaterialColor.GRAY).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_GATE_LIGHT_GRAY = register(BlockNames.PICKET_GATE_LIGHT_GRAY, new UpgradedGateBlock(Block.Properties.create(WOOD, MaterialColor.LIGHT_GRAY).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_GATE_CYAN = register(BlockNames.PICKET_GATE_CYAN, new UpgradedGateBlock(Block.Properties.create(WOOD, MaterialColor.CYAN).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_GATE_PURPLE = register(BlockNames.PICKET_GATE_PURPLE, new UpgradedGateBlock(Block.Properties.create(WOOD, MaterialColor.PURPLE).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_GATE_BLUE = register(BlockNames.PICKET_GATE_BLUE, new UpgradedGateBlock(Block.Properties.create(WOOD, MaterialColor.BLUE).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_GATE_BROWN = register(BlockNames.PICKET_GATE_BROWN, new UpgradedGateBlock(Block.Properties.create(WOOD, MaterialColor.BROWN).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_GATE_GREEN = register(BlockNames.PICKET_GATE_GREEN, new UpgradedGateBlock(Block.Properties.create(WOOD, MaterialColor.GREEN).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_GATE_RED = register(BlockNames.PICKET_GATE_RED, new UpgradedGateBlock(Block.Properties.create(WOOD, MaterialColor.RED).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block PICKET_GATE_BLACK = register(BlockNames.PICKET_GATE_BLACK, new UpgradedGateBlock(Block.Properties.create(WOOD, MaterialColor.BLACK).hardnessAndResistance(0.5F).sound(SoundType.WOOD)));
    public static final Block CRATE_OAK = register(BlockNames.CRATE_OAK, new CrateBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block CRATE_SPRUCE = register(BlockNames.CRATE_SPRUCE, new CrateBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block CRATE_BIRCH = register(BlockNames.CRATE_BIRCH, new CrateBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block CRATE_JUNGLE = register(BlockNames.CRATE_JUNGLE, new CrateBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block CRATE_ACACIA = register(BlockNames.CRATE_ACACIA, new CrateBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block CRATE_DARK_OAK = register(BlockNames.CRATE_DARK_OAK, new CrateBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block CRATE_STRIPPED_OAK = register(BlockNames.CRATE_STRIPPED_OAK, new CrateBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block CRATE_STRIPPED_SPRUCE = register(BlockNames.CRATE_STRIPPED_SPRUCE, new CrateBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block CRATE_STRIPPED_BIRCH = register(BlockNames.CRATE_STRIPPED_BIRCH, new CrateBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block CRATE_STRIPPED_JUNGLE = register(BlockNames.CRATE_STRIPPED_JUNGLE, new CrateBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block CRATE_STRIPPED_ACACIA = register(BlockNames.CRATE_STRIPPED_ACACIA, new CrateBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block CRATE_STRIPPED_DARK_OAK = register(BlockNames.CRATE_STRIPPED_DARK_OAK, new CrateBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block PARK_BENCH_OAK = register(BlockNames.OAK_PARK_BENCH, new ParkBenchBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block PARK_BENCH_SPRUCE = register(BlockNames.SPRUCE_PARK_BENCH, new ParkBenchBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block PARK_BENCH_BIRCH = register(BlockNames.BIRCH_PARK_BENCH, new ParkBenchBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block PARK_BENCH_JUNGLE = register(BlockNames.JUNGLE_PARK_BENCH, new ParkBenchBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block PARK_BENCH_ACACIA = register(BlockNames.ACACIA_PARK_BENCH, new ParkBenchBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block PARK_BENCH_DARK_OAK = register(BlockNames.DARK_OAK_PARK_BENCH, new ParkBenchBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block PARK_BENCH_STRIPPED_OAK = register(BlockNames.STRIPPED_OAK_PARK_BENCH, new ParkBenchBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block PARK_BENCH_STRIPPED_SPRUCE = register(BlockNames.STRIPPED_SPRUCE_PARK_BENCH, new ParkBenchBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block PARK_BENCH_STRIPPED_BIRCH = register(BlockNames.STRIPPED_BIRCH_PARK_BENCH, new ParkBenchBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block PARK_BENCH_STRIPPED_JUNGLE = register(BlockNames.STRIPPED_JUNGLE_PARK_BENCH, new ParkBenchBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block PARK_BENCH_STRIPPED_ACACIA = register(BlockNames.STRIPPED_ACACIA_PARK_BENCH, new ParkBenchBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block PARK_BENCH_STRIPPED_DARK_OAK = register(BlockNames.STRIPPED_DARK_OAK_PARK_BENCH, new ParkBenchBlock(Block.Properties.create(WOOD).hardnessAndResistance(2.0F, 10.0F).sound(SoundType.WOOD)));
    public static final Block POST_BOX = register(BlockNames.POST_BOX, new PostBoxBlock(Block.Properties.from(Blocks.ANVIL)));
    public static final Block MAIL_BOX_OAK = register(BlockNames.MAIL_BOX_OAK, new MailBoxBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block MAIL_BOX_SPRUCE = register(BlockNames.MAIL_BOX_SPRUCE, new MailBoxBlock(Block.Properties.from(Blocks.SPRUCE_PLANKS)));
    public static final Block MAIL_BOX_BIRCH = register(BlockNames.MAIL_BOX_BIRCH, new MailBoxBlock(Block.Properties.from(Blocks.BIRCH_PLANKS)));
    public static final Block MAIL_BOX_JUNGLE = register(BlockNames.MAIL_BOX_JUNGLE, new MailBoxBlock(Block.Properties.from(Blocks.JUNGLE_PLANKS)));
    public static final Block MAIL_BOX_ACACIA = register(BlockNames.MAIL_BOX_ACACIA, new MailBoxBlock(Block.Properties.from(Blocks.ACACIA_PLANKS)));
    public static final Block MAIL_BOX_DARK_OAK = register(BlockNames.MAIL_BOX_DARK_OAK, new MailBoxBlock(Block.Properties.from(Blocks.DARK_OAK_PLANKS)));
    public static final Block MAIL_BOX_STRIPPED_OAK = register(BlockNames.MAIL_BOX_STRIPPED_OAK, new MailBoxBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block MAIL_BOX_STRIPPED_SPRUCE = register(BlockNames.MAIL_BOX_STRIPPED_SPRUCE, new MailBoxBlock(Block.Properties.from(Blocks.SPRUCE_PLANKS)));
    public static final Block MAIL_BOX_STRIPPED_BIRCH = register(BlockNames.MAIL_BOX_STRIPPED_BIRCH, new MailBoxBlock(Block.Properties.from(Blocks.BIRCH_PLANKS)));
    public static final Block MAIL_BOX_STRIPPED_JUNGLE = register(BlockNames.MAIL_BOX_STRIPPED_JUNGLE, new MailBoxBlock(Block.Properties.from(Blocks.JUNGLE_PLANKS)));
    public static final Block MAIL_BOX_STRIPPED_ACACIA = register(BlockNames.MAIL_BOX_STRIPPED_ACACIA, new MailBoxBlock(Block.Properties.from(Blocks.ACACIA_PLANKS)));
    public static final Block MAIL_BOX_STRIPPED_DARK_OAK = register(BlockNames.MAIL_BOX_STRIPPED_DARK_OAK, new MailBoxBlock(Block.Properties.from(Blocks.DARK_OAK_PLANKS)));
    public static final Block HEDGE_OAK = register(BlockNames.HEDGE_OAK, new HedgeBlock(Block.Properties.from(Blocks.OAK_LEAVES)));
    public static final Block HEDGE_SPRUCE = register(BlockNames.HEDGE_SPRUCE, new HedgeBlock(Block.Properties.from(Blocks.SPRUCE_LEAVES)));
    public static final Block HEDGE_BIRCH = register(BlockNames.HEDGE_BIRCH, new HedgeBlock(Block.Properties.from(Blocks.BIRCH_LEAVES)));
    public static final Block HEDGE_JUNGLE = register(BlockNames.HEDGE_JUNGLE, new HedgeBlock(Block.Properties.from(Blocks.JUNGLE_LEAVES)));
    public static final Block HEDGE_ACACIA = register(BlockNames.HEDGE_ACACIA, new HedgeBlock(Block.Properties.from(Blocks.ACACIA_LEAVES)));
    public static final Block HEDGE_DARK_OAK = register(BlockNames.HEDGE_DARK_OAK, new HedgeBlock(Block.Properties.from(Blocks.DARK_OAK_LEAVES)));
    public static final Block ROCK_PATH = register(BlockNames.ROCK_PATH, new RockPath(Block.Properties.from(Blocks.STONE)));
    public static final Block TRAMPOLINE_WHITE = register(BlockNames.TRAMPOLINE_WHITE, new TrampolineBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block TRAMPOLINE_ORANGE = register(BlockNames.TRAMPOLINE_ORANGE, new TrampolineBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block TRAMPOLINE_MAGENTA = register(BlockNames.TRAMPOLINE_MAGENTA, new TrampolineBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block TRAMPOLINE_LIGHT_BLUE = register(BlockNames.TRAMPOLINE_LIGHT_BLUE, new TrampolineBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block TRAMPOLINE_YELLOW = register(BlockNames.TRAMPOLINE_YELLOW, new TrampolineBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block TRAMPOLINE_LIME = register(BlockNames.TRAMPOLINE_LIME, new TrampolineBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block TRAMPOLINE_PINK = register(BlockNames.TRAMPOLINE_PINK, new TrampolineBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block TRAMPOLINE_GRAY = register(BlockNames.TRAMPOLINE_GRAY, new TrampolineBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block TRAMPOLINE_LIGHT_GRAY = register(BlockNames.TRAMPOLINE_LIGHT_GRAY, new TrampolineBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block TRAMPOLINE_CYAN = register(BlockNames.TRAMPOLINE_CYAN, new TrampolineBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block TRAMPOLINE_PURPLE = register(BlockNames.TRAMPOLINE_PURPLE, new TrampolineBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block TRAMPOLINE_BLUE = register(BlockNames.TRAMPOLINE_BLUE, new TrampolineBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block TRAMPOLINE_BROWN = register(BlockNames.TRAMPOLINE_BROWN, new TrampolineBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block TRAMPOLINE_GREEN = register(BlockNames.TRAMPOLINE_GREEN, new TrampolineBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block TRAMPOLINE_RED = register(BlockNames.TRAMPOLINE_RED, new TrampolineBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block TRAMPOLINE_BLACK = register(BlockNames.TRAMPOLINE_BLACK, new TrampolineBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block COOLER_WHITE = register(BlockNames.COOLER_WHITE, new CoolerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block COOLER_ORANGE = register(BlockNames.COOLER_ORANGE, new CoolerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block COOLER_MAGENTA = register(BlockNames.COOLER_MAGENTA, new CoolerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block COOLER_LIGHT_BLUE = register(BlockNames.COOLER_LIGHT_BLUE, new CoolerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block COOLER_YELLOW = register(BlockNames.COOLER_YELLOW, new CoolerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block COOLER_LIME = register(BlockNames.COOLER_LIME, new CoolerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block COOLER_PINK = register(BlockNames.COOLER_PINK, new CoolerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block COOLER_GRAY = register(BlockNames.COOLER_GRAY, new CoolerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block COOLER_LIGHT_GRAY = register(BlockNames.COOLER_LIGHT_GRAY, new CoolerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block COOLER_CYAN = register(BlockNames.COOLER_CYAN, new CoolerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block COOLER_PURPLE = register(BlockNames.COOLER_PURPLE, new CoolerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block COOLER_BLUE = register(BlockNames.COOLER_BLUE, new CoolerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block COOLER_BROWN = register(BlockNames.COOLER_BROWN, new CoolerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block COOLER_GREEN = register(BlockNames.COOLER_GREEN, new CoolerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block COOLER_RED = register(BlockNames.COOLER_RED, new CoolerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block COOLER_BLACK = register(BlockNames.COOLER_BLACK, new CoolerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block GRILL_WHITE = register(BlockNames.GRILL_WHITE, new GrillBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block GRILL_ORANGE = register(BlockNames.GRILL_ORANGE, new GrillBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block GRILL_MAGENTA = register(BlockNames.GRILL_MAGENTA, new GrillBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block GRILL_LIGHT_BLUE = register(BlockNames.GRILL_LIGHT_BLUE, new GrillBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block GRILL_YELLOW = register(BlockNames.GRILL_YELLOW, new GrillBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block GRILL_LIME = register(BlockNames.GRILL_LIME, new GrillBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block GRILL_PINK = register(BlockNames.GRILL_PINK, new GrillBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block GRILL_GRAY = register(BlockNames.GRILL_GRAY, new GrillBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block GRILL_LIGHT_GRAY = register(BlockNames.GRILL_LIGHT_GRAY, new GrillBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block GRILL_CYAN = register(BlockNames.GRILL_CYAN, new GrillBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block GRILL_PURPLE = register(BlockNames.GRILL_PURPLE, new GrillBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block GRILL_BLUE = register(BlockNames.GRILL_BLUE, new GrillBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block GRILL_BROWN = register(BlockNames.GRILL_BROWN, new GrillBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block GRILL_GREEN = register(BlockNames.GRILL_GREEN, new GrillBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block GRILL_RED = register(BlockNames.GRILL_RED, new GrillBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block GRILL_BLACK = register(BlockNames.GRILL_BLACK, new GrillBlock(Block.Properties.from(Blocks.STONE)));
    public static final Block DOOR_MAT = register(BlockNames.DOOR_MAT, new DoorMatBlock(Block.Properties.from(Blocks.WHITE_WOOL)), block -> new DoorMatItem(block, new Item.Properties().group(FurnitureMod.GROUP)));
    public static final Block DIVING_BOARD = register(BlockNames.DIVING_BOARD, new DivingBoardBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_OAK = register(BlockNames.KITCHEN_COUNTER_OAK, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_SPRUCE = register(BlockNames.KITCHEN_COUNTER_SPRUCE, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_BIRCH = register(BlockNames.KITCHEN_COUNTER_BIRCH, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_JUNGLE = register(BlockNames.KITCHEN_COUNTER_JUNGLE, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_ACACIA = register(BlockNames.KITCHEN_COUNTER_ACACIA, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_DARK_OAK = register(BlockNames.KITCHEN_COUNTER_DARK_OAK, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_STRIPPED_OAK = register(BlockNames.KITCHEN_COUNTER_STRIPPED_OAK, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_STRIPPED_SPRUCE = register(BlockNames.KITCHEN_COUNTER_STRIPPED_SPRUCE, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_STRIPPED_BIRCH = register(BlockNames.KITCHEN_COUNTER_STRIPPED_BIRCH, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_STRIPPED_JUNGLE = register(BlockNames.KITCHEN_COUNTER_STRIPPED_JUNGLE, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_STRIPPED_ACACIA = register(BlockNames.KITCHEN_COUNTER_STRIPPED_ACACIA, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_STRIPPED_DARK_OAK = register(BlockNames.KITCHEN_COUNTER_STRIPPED_DARK_OAK, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_WHITE = register(BlockNames.KITCHEN_COUNTER_WHITE, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_ORANGE = register(BlockNames.KITCHEN_COUNTER_ORANGE, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_MAGENTA = register(BlockNames.KITCHEN_COUNTER_MAGENTA, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_LIGHT_BLUE = register(BlockNames.KITCHEN_COUNTER_LIGHT_BLUE, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_YELLOW = register(BlockNames.KITCHEN_COUNTER_YELLOW, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_LIME = register(BlockNames.KITCHEN_COUNTER_LIME, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_PINK = register(BlockNames.KITCHEN_COUNTER_PINK, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_GRAY = register(BlockNames.KITCHEN_COUNTER_GRAY, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_LIGHT_GRAY = register(BlockNames.KITCHEN_COUNTER_LIGHT_GRAY, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_CYAN = register(BlockNames.KITCHEN_COUNTER_CYAN, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_PURPLE = register(BlockNames.KITCHEN_COUNTER_PURPLE, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_BLUE = register(BlockNames.KITCHEN_COUNTER_BLUE, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_BROWN = register(BlockNames.KITCHEN_COUNTER_BROWN, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_GREEN = register(BlockNames.KITCHEN_COUNTER_GREEN, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_RED = register(BlockNames.KITCHEN_COUNTER_RED, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_COUNTER_BLACK = register(BlockNames.KITCHEN_COUNTER_BLACK, new KitchenCounterBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_OAK = register(BlockNames.KITCHEN_DRAWER_OAK, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_SPRUCE = register(BlockNames.KITCHEN_DRAWER_SPRUCE, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_BIRCH = register(BlockNames.KITCHEN_DRAWER_BIRCH, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_JUNGLE = register(BlockNames.KITCHEN_DRAWER_JUNGLE, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_ACACIA = register(BlockNames.KITCHEN_DRAWER_ACACIA, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_DARK_OAK = register(BlockNames.KITCHEN_DRAWER_DARK_OAK, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_STRIPPED_OAK = register(BlockNames.KITCHEN_DRAWER_STRIPPED_OAK, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_STRIPPED_SPRUCE = register(BlockNames.KITCHEN_DRAWER_STRIPPED_SPRUCE, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_STRIPPED_BIRCH = register(BlockNames.KITCHEN_DRAWER_STRIPPED_BIRCH, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_STRIPPED_JUNGLE = register(BlockNames.KITCHEN_DRAWER_STRIPPED_JUNGLE, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_STRIPPED_ACACIA = register(BlockNames.KITCHEN_DRAWER_STRIPPED_ACACIA, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_STRIPPED_DARK_OAK = register(BlockNames.KITCHEN_DRAWER_STRIPPED_DARK_OAK, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_WHITE = register(BlockNames.KITCHEN_DRAWER_WHITE, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_ORANGE = register(BlockNames.KITCHEN_DRAWER_ORANGE, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_MAGENTA = register(BlockNames.KITCHEN_DRAWER_MAGENTA, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_LIGHT_BLUE = register(BlockNames.KITCHEN_DRAWER_LIGHT_BLUE, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_YELLOW = register(BlockNames.KITCHEN_DRAWER_YELLOW, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_LIME = register(BlockNames.KITCHEN_DRAWER_LIME, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_PINK = register(BlockNames.KITCHEN_DRAWER_PINK, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_GRAY = register(BlockNames.KITCHEN_DRAWER_GRAY, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_LIGHT_GRAY = register(BlockNames.KITCHEN_DRAWER_LIGHT_GRAY, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_CYAN = register(BlockNames.KITCHEN_DRAWER_CYAN, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_PURPLE = register(BlockNames.KITCHEN_DRAWER_PURPLE, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_BLUE = register(BlockNames.KITCHEN_DRAWER_BLUE, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_BROWN = register(BlockNames.KITCHEN_DRAWER_BROWN, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_GREEN = register(BlockNames.KITCHEN_DRAWER_GREEN, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_RED = register(BlockNames.KITCHEN_DRAWER_RED, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_DRAWER_BLACK = register(BlockNames.KITCHEN_DRAWER_BLACK, new KitchenDrawerBlock(Block.Properties.from(Blocks.OAK_PLANKS)));
    public static final Block KITCHEN_SINK_LIGHT_OAK = register(BlockNames.KITCHEN_SINK_LIGHT_OAK, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_LIGHT_SPRUCE = register(BlockNames.KITCHEN_SINK_LIGHT_SPRUCE, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_LIGHT_BIRCH = register(BlockNames.KITCHEN_SINK_LIGHT_BIRCH, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_LIGHT_JUNGLE = register(BlockNames.KITCHEN_SINK_LIGHT_JUNGLE, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_LIGHT_ACACIA = register(BlockNames.KITCHEN_SINK_LIGHT_ACACIA, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_LIGHT_DARK_OAK = register(BlockNames.KITCHEN_SINK_LIGHT_DARK_OAK, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_LIGHT_STRIPPED_OAK = register(BlockNames.KITCHEN_SINK_LIGHT_STRIPPED_OAK, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_LIGHT_STRIPPED_SPRUCE = register(BlockNames.KITCHEN_SINK_LIGHT_STRIPPED_SPRUCE, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_LIGHT_STRIPPED_BIRCH = register(BlockNames.KITCHEN_SINK_LIGHT_STRIPPED_BIRCH, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_LIGHT_STRIPPED_JUNGLE = register(BlockNames.KITCHEN_SINK_LIGHT_STRIPPED_JUNGLE, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_LIGHT_STRIPPED_ACACIA = register(BlockNames.KITCHEN_SINK_LIGHT_STRIPPED_ACACIA, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_LIGHT_STRIPPED_DARK_OAK = register(BlockNames.KITCHEN_SINK_LIGHT_STRIPPED_DARK_OAK, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_DARK_OAK = register(BlockNames.KITCHEN_SINK_DARK_OAK, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_DARK_SPRUCE = register(BlockNames.KITCHEN_SINK_DARK_SPRUCE, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_DARK_BIRCH = register(BlockNames.KITCHEN_SINK_DARK_BIRCH, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_DARK_JUNGLE = register(BlockNames.KITCHEN_SINK_DARK_JUNGLE, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_DARK_ACACIA = register(BlockNames.KITCHEN_SINK_DARK_ACACIA, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_DARK_DARK_OAK = register(BlockNames.KITCHEN_SINK_DARK_DARK_OAK, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_DARK_STRIPPED_OAK = register(BlockNames.KITCHEN_SINK_DARK_STRIPPED_OAK, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_DARK_STRIPPED_SPRUCE = register(BlockNames.KITCHEN_SINK_DARK_STRIPPED_SPRUCE, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_DARK_STRIPPED_BIRCH = register(BlockNames.KITCHEN_SINK_DARK_STRIPPED_BIRCH, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_DARK_STRIPPED_JUNGLE = register(BlockNames.KITCHEN_SINK_DARK_STRIPPED_JUNGLE, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_DARK_STRIPPED_ACACIA = register(BlockNames.KITCHEN_SINK_DARK_STRIPPED_ACACIA, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_DARK_STRIPPED_DARK_OAK = register(BlockNames.KITCHEN_SINK_DARK_STRIPPED_DARK_OAK, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), true));
    public static final Block KITCHEN_SINK_WHITE = register(BlockNames.KITCHEN_SINK_WHITE, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), false));
    public static final Block KITCHEN_SINK_ORANGE = register(BlockNames.KITCHEN_SINK_ORANGE, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), false));
    public static final Block KITCHEN_SINK_MAGENTA = register(BlockNames.KITCHEN_SINK_MAGENTA, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), false));
    public static final Block KITCHEN_SINK_LIGHT_BLUE = register(BlockNames.KITCHEN_SINK_LIGHT_BLUE, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), false));
    public static final Block KITCHEN_SINK_YELLOW = register(BlockNames.KITCHEN_SINK_YELLOW, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), false));
    public static final Block KITCHEN_SINK_LIME = register(BlockNames.KITCHEN_SINK_LIME, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), false));
    public static final Block KITCHEN_SINK_PINK = register(BlockNames.KITCHEN_SINK_PINK, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), false));
    public static final Block KITCHEN_SINK_GRAY = register(BlockNames.KITCHEN_SINK_GRAY, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), false));
    public static final Block KITCHEN_SINK_LIGHT_GRAY = register(BlockNames.KITCHEN_SINK_LIGHT_GRAY, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), false));
    public static final Block KITCHEN_SINK_CYAN = register(BlockNames.KITCHEN_SINK_CYAN, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), false));
    public static final Block KITCHEN_SINK_PURPLE = register(BlockNames.KITCHEN_SINK_PURPLE, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), false));
    public static final Block KITCHEN_SINK_BLUE = register(BlockNames.KITCHEN_SINK_BLUE, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), false));
    public static final Block KITCHEN_SINK_BROWN = register(BlockNames.KITCHEN_SINK_BROWN, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), false));
    public static final Block KITCHEN_SINK_GREEN = register(BlockNames.KITCHEN_SINK_GREEN, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), false));
    public static final Block KITCHEN_SINK_RED = register(BlockNames.KITCHEN_SINK_RED, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), false));
    public static final Block KITCHEN_SINK_BLACK = register(BlockNames.KITCHEN_SINK_BLACK, new KitchenSinkBlock(Block.Properties.from(Blocks.OAK_PLANKS), false));
    
    private static Block register(String name, Block block)
    {
        return register(name, block, new Item.Properties().group(FurnitureMod.GROUP));
    }

    private static Block register(String name, Block block, Item.Properties properties)
    {
        return register(name, block, new BlockItem(block, properties));
    }

    private static Block register(String name, Block block, BlockItem item)
    {
        return register(name, block, block1 -> item);
    }

    private static Block register(String name, Block block, Function<Block, BlockItem> function)
    {
        block.setRegistryName(name);
        BLOCKS.add(block);
        if(block.getRegistryName() != null)
        {
            Item item = function.apply(block);
            item.setRegistryName(name);
            ITEMS.add(item);
        }
        return block;
    }

    @SubscribeEvent
    @SuppressWarnings("unused")
    public static void registerBlocks(final RegistryEvent.Register<Block> event)
    {
        BLOCKS.forEach(block -> event.getRegistry().register(block));
        BLOCKS.clear();
    }

    @SubscribeEvent
    @SuppressWarnings("unused")
    public static void registerItems(final RegistryEvent.Register<Item> event)
    {
        ITEMS.forEach(item -> event.getRegistry().register(item));
        ITEMS.clear();
    }
}
